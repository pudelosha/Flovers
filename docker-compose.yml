services:
  web:
    build:
      context: ./backend
    command: bash -lc "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file: ./backend/.env
    working_dir: /app
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - mailhog

  worker:
    build:
      context: ./backend
    command: celery -A app worker -l info
    env_file: ./backend/.env
    working_dir: /app
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db

  beat:
    build:
      context: ./backend
    command: celery -A app beat -l info
    env_file: ./backend/.env
    working_dir: /app
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppass}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mailhog:
    image: mailhog/mailhog:latest
    # SMTP is at 1025 inside the network; HTTP UI is exposed on 8025
    ports:
      - "8025:8025"

volumes:
  pgdata:
  static_volume:
  media_volume:
