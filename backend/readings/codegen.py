def generate_arduino_code(*, base_url: str, secret: str, device_id: int, device_key: str,
                          interval_hours: int, sensors: dict) -> str:
    """Return a minimal Arduino/ESP sketch that posts to /api/readings/ingest/."""
    use_temp  = bool(sensors.get("temperature", True))
    use_hum   = bool(sensors.get("humidity", True))
    use_light = bool(sensors.get("light", True))
    use_moist = bool(sensors.get("moisture", True))

    return f"""// Auto-generated by Flovers
// Dependencies you likely need: ArduinoJson, WiFiClient, HTTPClient (ESP32), etc.

const char* BASE_URL   = "{base_url}";
const char* INGEST_URL = "/api/readings/ingest/";
const char* SECRET     = "{secret}";
const int   DEVICE_ID  = {int(device_id)};
const char* DEVICE_KEY = "{device_key}";
const int   INTERVAL_H = {int(interval_hours)};

const bool USE_TEMP  = {"true" if use_temp else "false"};
const bool USE_HUM   = {"true" if use_hum else "false"};
const bool USE_LIGHT = {"true" if use_light else "false"};
const bool USE_MOIST = {"true" if use_moist else "false"};

// TODO: implement your WiFi setup and HTTP post here.
// Build JSON: {{"secret":SECRET,"device_id":DEVICE_ID,"device_key":DEVICE_KEY,"metrics":{{...}}}}

void setup() {{
  // init serial, wifi, sensors...
}}

void loop() {{
  // read sensors based on USE_* flags
  // build JSON body and POST to BASE_URL + INGEST_URL
  // handle response code (202 expected)
  delay(INTERVAL_H * 3600UL * 1000UL);
}}
"""
